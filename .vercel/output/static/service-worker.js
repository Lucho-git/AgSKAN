const s=location.pathname.split("/").slice(0,-1).join("/"),K=[s+"/_app/immutable/entry/app.3fe24195.js",s+"/_app/immutable/assets/0.99b67465.css",s+"/_app/immutable/nodes/0.274004ec.js",s+"/_app/immutable/assets/app.927f3d6a.css",s+"/_app/immutable/assets/archivo-vietnamese-400-normal.ded209c9.woff2",s+"/_app/immutable/assets/archivo-vietnamese-400-normal.a4c17c08.woff",s+"/_app/immutable/assets/archivo-latin-ext-400-normal.1e2638b4.woff2",s+"/_app/immutable/assets/archivo-latin-ext-400-normal.de05e15a.woff",s+"/_app/immutable/assets/archivo-latin-400-normal.72347adb.woff2",s+"/_app/immutable/assets/archivo-latin-400-normal.d7ba709a.woff",s+"/_app/immutable/assets/archivo-vietnamese-700-normal.ddc2f4dc.woff2",s+"/_app/immutable/assets/archivo-vietnamese-700-normal.5a294c76.woff",s+"/_app/immutable/assets/archivo-latin-ext-700-normal.a71ab2fe.woff2",s+"/_app/immutable/assets/archivo-latin-ext-700-normal.2d5476a7.woff",s+"/_app/immutable/assets/archivo-latin-700-normal.9e423e0c.woff2",s+"/_app/immutable/assets/archivo-latin-700-normal.51186ffc.woff",s+"/_app/immutable/assets/archivo-vietnamese-800-normal.3b6f9a95.woff2",s+"/_app/immutable/assets/archivo-vietnamese-800-normal.cdd67135.woff",s+"/_app/immutable/assets/archivo-latin-ext-800-normal.c06fecca.woff2",s+"/_app/immutable/assets/archivo-latin-ext-800-normal.f1e58aa4.woff",s+"/_app/immutable/assets/archivo-latin-800-normal.c8e125e6.woff2",s+"/_app/immutable/assets/archivo-latin-800-normal.3cd47c4a.woff",s+"/_app/immutable/assets/archivo-vietnamese-900-normal.99a868ed.woff2",s+"/_app/immutable/assets/archivo-vietnamese-900-normal.c0cd3c40.woff",s+"/_app/immutable/assets/archivo-latin-ext-900-normal.eed6fa93.woff2",s+"/_app/immutable/assets/archivo-latin-ext-900-normal.adcb9448.woff",s+"/_app/immutable/assets/archivo-latin-900-normal.f881f7e8.woff2",s+"/_app/immutable/assets/archivo-latin-900-normal.bbe5a1fe.woff",s+"/_app/immutable/nodes/1.29f5261d.js",s+"/_app/immutable/nodes/11.1ca0674e.js",s+"/_app/immutable/assets/12.bb812522.css",s+"/_app/immutable/nodes/12.83c55425.js",s+"/_app/immutable/nodes/13.4e06d90a.js",s+"/_app/immutable/nodes/14.2e77c6a7.js",s+"/_app/immutable/nodes/15.2ed85c9d.js",s+"/_app/immutable/nodes/16.ea72f58c.js",s+"/_app/immutable/nodes/17.131ef0d1.js",s+"/_app/immutable/nodes/18.551c2252.js",s+"/_app/immutable/nodes/2.df9fc5f8.js",s+"/_app/immutable/nodes/20.888ede38.js",s+"/_app/immutable/nodes/21.84cb12fd.js",s+"/_app/immutable/nodes/22.239f18b5.js",s+"/_app/immutable/nodes/24.0cdbeb34.js",s+"/_app/immutable/assets/25.e4550a0b.css",s+"/_app/immutable/nodes/25.36b00cc7.js",s+"/_app/immutable/nodes/26.65c10c11.js",s+"/_app/immutable/nodes/27.a959b6e2.js",s+"/_app/immutable/nodes/28.73cc4aee.js",s+"/_app/immutable/nodes/29.b3e7706c.js",s+"/_app/immutable/nodes/3.79886ee4.js",s+"/_app/immutable/nodes/30.5e025424.js",s+"/_app/immutable/nodes/31.b74c4745.js",s+"/_app/immutable/nodes/32.84f9fa7e.js",s+"/_app/immutable/nodes/33.6c496a93.js",s+"/_app/immutable/nodes/34.b75259d6.js",s+"/_app/immutable/nodes/35.c731f8eb.js",s+"/_app/immutable/nodes/36.c5cc3377.js",s+"/_app/immutable/assets/4.0066f181.css",s+"/_app/immutable/nodes/4.b83cd9c8.js",s+"/_app/immutable/nodes/5.39a79bdc.js",s+"/_app/immutable/nodes/6.61c926a0.js",s+"/_app/immutable/nodes/7.c09572a5.js",s+"/_app/immutable/assets/8.26150e02.css",s+"/_app/immutable/nodes/8.7a88a87a.js",s+"/_app/immutable/nodes/9.857b7064.js",s+"/_app/immutable/assets/MapViewer.43439da1.css",s+"/_app/immutable/assets/SvelteToast.126e14af.css",s+"/_app/immutable/chunks/23.ddc5071f.js",s+"/_app/immutable/chunks/MapViewer.svelte_svelte_type_style_lang.c398696c.js",s+"/_app/immutable/chunks/PricingFAQ.20bed73a.js",s+"/_app/immutable/chunks/SvelteToast.svelte_svelte_type_style_lang.cf71ce25.js",s+"/_app/immutable/chunks/_commonjsHelpers.de833af9.js",s+"/_app/immutable/chunks/_layout.78544974.js",s+"/_app/immutable/chunks/browser.0569d7d9.js",s+"/_app/immutable/chunks/control.c2cf8273.js",s+"/_app/immutable/chunks/each.34974530.js",s+"/_app/immutable/chunks/forms.232fd95d.js",s+"/_app/immutable/chunks/index.38921fa9.js",s+"/_app/immutable/chunks/index.408052cc.js",s+"/_app/immutable/chunks/index.7272c3b3.js",s+"/_app/immutable/chunks/login_config.09e6ce4d.js",s+"/_app/immutable/assets/login_config.0a15a45c.css",s+"/_app/immutable/chunks/lottie.c94986b4.js",s+"/_app/immutable/chunks/navigation.58f74453.js",s+"/_app/immutable/chunks/parse.bee59afc.js",s+"/_app/immutable/chunks/paths.d8f4387a.js",s+"/_app/immutable/chunks/posts.daf0f58d.js",s+"/_app/immutable/chunks/preload-helper.a4192956.js",s+"/_app/immutable/chunks/public.d2f41676.js",s+"/_app/immutable/chunks/scheduler.ccf898a6.js",s+"/_app/immutable/chunks/settings_module.c7b7ec2c.js",s+"/_app/immutable/chunks/singletons.5b14b65b.js",s+"/_app/immutable/chunks/spread.8a54911c.js",s+"/_app/immutable/chunks/stores.54c459da.js",s+"/_app/immutable/chunks/supabaseClient.5a6af499.js",s+"/_app/immutable/chunks/user.18705ff9.js",s+"/_app/immutable/chunks/v4.4a60fe23.js",s+"/_app/immutable/assets/index.798bbb7e.css",s+"/_app/immutable/chunks/index.9bcd1db9.js",s+"/_app/immutable/entry/start.e73e0ec1.js",s+"/_app/immutable/chunks/CombineHeader.5d0fc37b.js",s+"/_app/immutable/chunks/PhoneBlock.880bbec1.js",s+"/_app/immutable/chunks/Pointer.f4492f00.js",s+"/_app/immutable/chunks/SimpleTractor.1d251584.js",s+"/_app/immutable/chunks/TractorLoader.2ab3baff.js"],T=[s+"/animations/Animation - 1710405780083.json",s+"/animations/Animation - 1710405783862.json",s+"/animations/Animation - 1710405950210.json",s+"/animations/Animation - 1710406462116.json",s+"/animations/Animation - 1710406704037.json",s+"/animations/Animation - 1710407141931.json",s+"/animations/Animation - 1710407376191.json",s+"/animations/CoolLineMap.json",s+"/animations/drivingtruckanimation.json",s+"/animations/drivingtruckanimation2.json",s+"/animations/Error.json",s+"/animations/Error2.json",s+"/animations/ErrorChill.json",s+"/animations/ErrorFun.json",s+"/animations/FileBothWays.json",s+"/animations/FileOnBlob.json",s+"/animations/FileShare.json",s+"/animations/FileUploadAnimation.json",s+"/animations/IdleFile.json",s+"/animations/IdleUpload.json",s+"/animations/lineloop.json",s+"/animations/lineloopbrown.json",s+"/animations/lineloopgreen.json",s+"/animations/lineloopgreen2.json",s+"/animations/LostNavigation.json",s+"/animations/MovingTractor.json",s+"/animations/OneFileMovement.json",s+"/animations/OneSignalSDKWorker.js",s+"/animations/PinDrop.json",s+"/animations/PulsingBeacon.json",s+"/animations/PulsingBlueBeacon.json",s+"/animations/PulsingOrb.json",s+"/animations/rollingBalls.json",s+"/animations/SpinningGlobe.json",s+"/animations/TractorBothWays.json",s+"/atlas-icons/packs/achievement/fonts/achievement.eot",s+"/atlas-icons/packs/achievement/fonts/achievement.svg",s+"/atlas-icons/packs/achievement/fonts/achievement.ttf",s+"/atlas-icons/packs/achievement/fonts/achievement.woff",s+"/atlas-icons/packs/achievement/style.css",s+"/atlas-icons/packs/arrow/fonts/arrow.eot",s+"/atlas-icons/packs/arrow/fonts/arrow.svg",s+"/atlas-icons/packs/arrow/fonts/arrow.ttf",s+"/atlas-icons/packs/arrow/fonts/arrow.woff",s+"/atlas-icons/packs/arrow/style.css",s+"/atlas-icons/packs/audio/fonts/audio.eot",s+"/atlas-icons/packs/audio/fonts/audio.svg",s+"/atlas-icons/packs/audio/fonts/audio.ttf",s+"/atlas-icons/packs/audio/fonts/audio.woff",s+"/atlas-icons/packs/audio/style.css",s+"/atlas-icons/packs/basic-ui/fonts/basic-ui.eot",s+"/atlas-icons/packs/basic-ui/fonts/basic-ui.svg",s+"/atlas-icons/packs/basic-ui/fonts/basic-ui.ttf",s+"/atlas-icons/packs/basic-ui/fonts/basic-ui.woff",s+"/atlas-icons/packs/basic-ui/style.css",s+"/atlas-icons/packs/business-finance/fonts/business-finance.eot",s+"/atlas-icons/packs/business-finance/fonts/business-finance.svg",s+"/atlas-icons/packs/business-finance/fonts/business-finance.ttf",s+"/atlas-icons/packs/business-finance/fonts/business-finance.woff",s+"/atlas-icons/packs/business-finance/style.css",s+"/atlas-icons/packs/christmas/fonts/christmas.eot",s+"/atlas-icons/packs/christmas/fonts/christmas.svg",s+"/atlas-icons/packs/christmas/fonts/christmas.ttf",s+"/atlas-icons/packs/christmas/fonts/christmas.woff",s+"/atlas-icons/packs/christmas/style.css",s+"/atlas-icons/packs/cinema/fonts/cinema.eot",s+"/atlas-icons/packs/cinema/fonts/cinema.svg",s+"/atlas-icons/packs/cinema/fonts/cinema.ttf",s+"/atlas-icons/packs/cinema/fonts/cinema.woff",s+"/atlas-icons/packs/cinema/style.css",s+"/atlas-icons/packs/communication/fonts/communication.eot",s+"/atlas-icons/packs/communication/fonts/communication.svg",s+"/atlas-icons/packs/communication/fonts/communication.ttf",s+"/atlas-icons/packs/communication/fonts/communication.woff",s+"/atlas-icons/packs/communication/style.css",s+"/atlas-icons/packs/construction/fonts/construction.eot",s+"/atlas-icons/packs/construction/fonts/construction.svg",s+"/atlas-icons/packs/construction/fonts/construction.ttf",s+"/atlas-icons/packs/construction/fonts/construction.woff",s+"/atlas-icons/packs/construction/style.css",s+"/atlas-icons/packs/content-box/fonts/content-box.eot",s+"/atlas-icons/packs/content-box/fonts/content-box.svg",s+"/atlas-icons/packs/content-box/fonts/content-box.ttf",s+"/atlas-icons/packs/content-box/fonts/content-box.woff",s+"/atlas-icons/packs/content-box/style.css",s+"/atlas-icons/packs/data-document/fonts/data-document.eot",s+"/atlas-icons/packs/data-document/fonts/data-document.svg",s+"/atlas-icons/packs/data-document/fonts/data-document.ttf",s+"/atlas-icons/packs/data-document/fonts/data-document.woff",s+"/atlas-icons/packs/data-document/style.css",s+"/atlas-icons/packs/ecology/fonts/ecology.eot",s+"/atlas-icons/packs/ecology/fonts/ecology.svg",s+"/atlas-icons/packs/ecology/fonts/ecology.ttf",s+"/atlas-icons/packs/ecology/fonts/ecology.woff",s+"/atlas-icons/packs/ecology/style.css",s+"/atlas-icons/packs/electronic-gadget/fonts/electronic-gadget.eot",s+"/atlas-icons/packs/electronic-gadget/fonts/electronic-gadget.svg",s+"/atlas-icons/packs/electronic-gadget/fonts/electronic-gadget.ttf",s+"/atlas-icons/packs/electronic-gadget/fonts/electronic-gadget.woff",s+"/atlas-icons/packs/electronic-gadget/style.css",s+"/atlas-icons/packs/fitness-gym/fonts/fitness-gym.eot",s+"/atlas-icons/packs/fitness-gym/fonts/fitness-gym.svg",s+"/atlas-icons/packs/fitness-gym/fonts/fitness-gym.ttf",s+"/atlas-icons/packs/fitness-gym/fonts/fitness-gym.woff",s+"/atlas-icons/packs/fitness-gym/style.css",s+"/atlas-icons/packs/food-beverage/fonts/food-beverage.eot",s+"/atlas-icons/packs/food-beverage/fonts/food-beverage.svg",s+"/atlas-icons/packs/food-beverage/fonts/food-beverage.ttf",s+"/atlas-icons/packs/food-beverage/fonts/food-beverage.woff",s+"/atlas-icons/packs/food-beverage/style.css",s+"/atlas-icons/packs/furniture/fonts/furniture.eot",s+"/atlas-icons/packs/furniture/fonts/furniture.svg",s+"/atlas-icons/packs/furniture/fonts/furniture.ttf",s+"/atlas-icons/packs/furniture/fonts/furniture.woff",s+"/atlas-icons/packs/furniture/style.css",s+"/atlas-icons/packs/goals/fonts/goals.eot",s+"/atlas-icons/packs/goals/fonts/goals.svg",s+"/atlas-icons/packs/goals/fonts/goals.ttf",s+"/atlas-icons/packs/goals/fonts/goals.woff",s+"/atlas-icons/packs/goals/style.css",s+"/atlas-icons/packs/hand-gesture/fonts/hand-gesture.eot",s+"/atlas-icons/packs/hand-gesture/fonts/hand-gesture.svg",s+"/atlas-icons/packs/hand-gesture/fonts/hand-gesture.ttf",s+"/atlas-icons/packs/hand-gesture/fonts/hand-gesture.woff",s+"/atlas-icons/packs/hand-gesture/style.css",s+"/atlas-icons/packs/hotel-service/fonts/hotel-service.eot",s+"/atlas-icons/packs/hotel-service/fonts/hotel-service.svg",s+"/atlas-icons/packs/hotel-service/fonts/hotel-service.ttf",s+"/atlas-icons/packs/hotel-service/fonts/hotel-service.woff",s+"/atlas-icons/packs/hotel-service/style.css",s+"/atlas-icons/packs/internet-security/fonts/internet-security.eot",s+"/atlas-icons/packs/internet-security/fonts/internet-security.svg",s+"/atlas-icons/packs/internet-security/fonts/internet-security.ttf",s+"/atlas-icons/packs/internet-security/fonts/internet-security.woff",s+"/atlas-icons/packs/internet-security/style.css",s+"/atlas-icons/packs/laboratory/fonts/laboratory.eot",s+"/atlas-icons/packs/laboratory/fonts/laboratory.svg",s+"/atlas-icons/packs/laboratory/fonts/laboratory.ttf",s+"/atlas-icons/packs/laboratory/fonts/laboratory.woff",s+"/atlas-icons/packs/laboratory/style.css",s+"/atlas-icons/packs/leadership/fonts/leadership.eot",s+"/atlas-icons/packs/leadership/fonts/leadership.svg",s+"/atlas-icons/packs/leadership/fonts/leadership.ttf",s+"/atlas-icons/packs/leadership/fonts/leadership.woff",s+"/atlas-icons/packs/leadership/style.css",s+"/atlas-icons/packs/love/fonts/love.eot",s+"/atlas-icons/packs/love/fonts/love.svg",s+"/atlas-icons/packs/love/fonts/love.ttf",s+"/atlas-icons/packs/love/fonts/love.woff",s+"/atlas-icons/packs/love/style.css",s+"/atlas-icons/packs/marketing/fonts/marketing.eot",s+"/atlas-icons/packs/marketing/fonts/marketing.svg",s+"/atlas-icons/packs/marketing/fonts/marketing.ttf",s+"/atlas-icons/packs/marketing/fonts/marketing.woff",s+"/atlas-icons/packs/marketing/style.css",s+"/atlas-icons/packs/medical/fonts/medical.eot",s+"/atlas-icons/packs/medical/fonts/medical.svg",s+"/atlas-icons/packs/medical/fonts/medical.ttf",s+"/atlas-icons/packs/medical/fonts/medical.woff",s+"/atlas-icons/packs/medical/style.css",s+"/atlas-icons/packs/partnership/fonts/partnership.eot",s+"/atlas-icons/packs/partnership/fonts/partnership.svg",s+"/atlas-icons/packs/partnership/fonts/partnership.ttf",s+"/atlas-icons/packs/partnership/fonts/partnership.woff",s+"/atlas-icons/packs/partnership/style.css",s+"/atlas-icons/packs/personal-development/fonts/personal-development.eot",s+"/atlas-icons/packs/personal-development/fonts/personal-development.svg",s+"/atlas-icons/packs/personal-development/fonts/personal-development.ttf",s+"/atlas-icons/packs/personal-development/fonts/personal-development.woff",s+"/atlas-icons/packs/personal-development/style.css",s+"/atlas-icons/packs/real-estate/fonts/real-estate.eot",s+"/atlas-icons/packs/real-estate/fonts/real-estate.svg",s+"/atlas-icons/packs/real-estate/fonts/real-estate.ttf",s+"/atlas-icons/packs/real-estate/fonts/real-estate.woff",s+"/atlas-icons/packs/real-estate/style.css",s+"/atlas-icons/packs/school/fonts/school.eot",s+"/atlas-icons/packs/school/fonts/school.svg",s+"/atlas-icons/packs/school/fonts/school.ttf",s+"/atlas-icons/packs/school/fonts/school.woff",s+"/atlas-icons/packs/school/style.css",s+"/atlas-icons/packs/social/fonts/social.eot",s+"/atlas-icons/packs/social/fonts/social.svg",s+"/atlas-icons/packs/social/fonts/social.ttf",s+"/atlas-icons/packs/social/fonts/social.woff",s+"/atlas-icons/packs/social/style.css",s+"/atlas-icons/packs/sport/fonts/sport.eot",s+"/atlas-icons/packs/sport/fonts/sport.svg",s+"/atlas-icons/packs/sport/fonts/sport.ttf",s+"/atlas-icons/packs/sport/fonts/sport.woff",s+"/atlas-icons/packs/sport/style.css",s+"/atlas-icons/packs/thanksgiving/fonts/thanksgiving.eot",s+"/atlas-icons/packs/thanksgiving/fonts/thanksgiving.svg",s+"/atlas-icons/packs/thanksgiving/fonts/thanksgiving.ttf",s+"/atlas-icons/packs/thanksgiving/fonts/thanksgiving.woff",s+"/atlas-icons/packs/thanksgiving/style.css",s+"/atlas-icons/packs/transportation/fonts/transportation.eot",s+"/atlas-icons/packs/transportation/fonts/transportation.svg",s+"/atlas-icons/packs/transportation/fonts/transportation.ttf",s+"/atlas-icons/packs/transportation/fonts/transportation.woff",s+"/atlas-icons/packs/transportation/style.css",s+"/atlas-icons/packs/travel/fonts/travel.eot",s+"/atlas-icons/packs/travel/fonts/travel.svg",s+"/atlas-icons/packs/travel/fonts/travel.ttf",s+"/atlas-icons/packs/travel/fonts/travel.woff",s+"/atlas-icons/packs/travel/style.css",s+"/atlas-icons/packs/virtual-reality/fonts/virtual-reality.eot",s+"/atlas-icons/packs/virtual-reality/fonts/virtual-reality.svg",s+"/atlas-icons/packs/virtual-reality/fonts/virtual-reality.ttf",s+"/atlas-icons/packs/virtual-reality/fonts/virtual-reality.woff",s+"/atlas-icons/packs/virtual-reality/style.css",s+"/atlas-icons/packs/weather/fonts/weather.eot",s+"/atlas-icons/packs/weather/fonts/weather.svg",s+"/atlas-icons/packs/weather/fonts/weather.ttf",s+"/atlas-icons/packs/weather/fonts/weather.woff",s+"/atlas-icons/packs/weather/style.css",s+"/atlas-icons/packs/web-design/fonts/web-design.eot",s+"/atlas-icons/packs/web-design/fonts/web-design.svg",s+"/atlas-icons/packs/web-design/fonts/web-design.ttf",s+"/atlas-icons/packs/web-design/fonts/web-design.woff",s+"/atlas-icons/packs/web-design/style.css",s+"/atlas-icons/packs/winter/fonts/winter.eot",s+"/atlas-icons/packs/winter/fonts/winter.svg",s+"/atlas-icons/packs/winter/fonts/winter.ttf",s+"/atlas-icons/packs/winter/fonts/winter.woff",s+"/atlas-icons/packs/winter/style.css",s+"/atlas-icons/packs/working-together/fonts/working-together.eot",s+"/atlas-icons/packs/working-together/fonts/working-together.svg",s+"/atlas-icons/packs/working-together/fonts/working-together.ttf",s+"/atlas-icons/packs/working-together/fonts/working-together.woff",s+"/atlas-icons/packs/working-together/style.css",s+"/atlas-icons/packs/world-monuments/fonts/world-monuments.eot",s+"/atlas-icons/packs/world-monuments/fonts/world-monuments.svg",s+"/atlas-icons/packs/world-monuments/fonts/world-monuments.ttf",s+"/atlas-icons/packs/world-monuments/fonts/world-monuments.woff",s+"/atlas-icons/packs/world-monuments/style.css",s+"/atlas-icons/packs/yoga/fonts/yoga.eot",s+"/atlas-icons/packs/yoga/fonts/yoga.svg",s+"/atlas-icons/packs/yoga/fonts/yoga.ttf",s+"/atlas-icons/packs/yoga/fonts/yoga.woff",s+"/atlas-icons/packs/yoga/style.css",s+"/atlas-icons/style.css",s+"/badge.png",s+"/data/BartsSeeding2022.geojson",s+"/data/supershedapplication.geojson",s+"/data/supershedboundary.geojson",s+"/data/supershedboundary.qmd",s+"/data/SuperShedHarvest.csv",s+"/data/supershedharvest.geojson",s+"/data/SuperShedSeeding.csv",s+"/data/supershedseeding.geojson",s+"/docs/BartsSeeding2022.qmd",s+"/docs/Sales-contract.pdf",s+"/docs/SKAN-Privacy-Policy.pdf",s+"/docs/skan_sample_shapefile.zip",s+"/docs/terms_of_service.pdf",s+"/docs/vecteezy_farming-icon-pack_7795737.svg",s+"/favicon.ico",s+"/favicon.png",s+"/faviconsquare.png",s+"/fonts/archivo-latin-900-normal.woff2",s+"/icon.svg",s+"/images/Australia_states_and_territories_labelled.png",s+"/images/Australia_states_and_territories_labelled.svg",s+"/images/ChaserBinUp.png",s+"/images/cm_logo.svg",s+"/images/example-home.png",s+"/images/export-map-location-icon.svg",s+"/images/farm-icon.svg",s+"/images/farm-land-icon.svg",s+"/images/farm-tractor-icon.svg",s+"/images/fertilizer-color-icon.svg",s+"/images/fertilizer-icon.svg",s+"/images/fieldpic_1.jpg",s+"/images/fieldpic_2.jpg",s+"/images/fieldpic_3.jpg",s+"/images/fieldpic_4.jpg",s+"/images/fieldpic_5.jpg",s+"/images/file-upload-icon.svg",s+"/images/folder-upload-icon.svg",s+"/images/fuel1.svg",s+"/images/fuel2.svg",s+"/images/gear.svg",s+"/images/gear_2.svg",s+"/images/gear_3.svg",s+"/images/gear_4.svg",s+"/images/grain-wheat-icon.svg",s+"/images/HarvestorUp.png",s+"/images/image-upload-icon.svg",s+"/images/lach-gif.gif",s+"/images/lach.png",s+"/images/MapLogo.PNG",s+"/images/MapLogo2.PNG",s+"/images/mobiledisplay1.jpg",s+"/images/mobiledisplay2.jpg",s+"/images/mobiledisplay3.jpg",s+"/images/rss.svg",s+"/images/ryan.jpg",s+"/images/tractor-color-icon.svg",s+"/images/tractor.svg",s+"/images/upload-icon.svg",s+"/images/upload-round-icon.svg",s+"/images/upload-zip-icon.svg",s+"/images/x384.png",s+"/images/x512.png",s+"/manifest.json",s+"/robots.txt",s+"/userIcons/combine_header_left.svg",s+"/userIcons/phone-portrait.svg",s+"/userIcons/simple_tractor_up.svg",s+"/userIcons/topdown.svg",s+"/userIcons/tractor_2_left.svg",s+"/userIcons/tractor_left.svg",s+"/userIcons/tractor_loader_left.svg",s+"/x384.png",s+"/x512.png",s+"/x512small.png",s+"/x512smallsharp.png"],N=[s+"/",s+"/__data.json",s+"/features",s+"/features/__data.json",s+"/features/paddock_path",s+"/features/paddock_path/__data.json",s+"/features/pipeline",s+"/features/pipeline/__data.json",s+"/features/rss.xml",s+"/pricing",s+"/pricing/__data.json"],E="1719813879370";try{self["workbox:core:7.0.0"]&&_()}catch{}const I=(n,...e)=>{let t=n;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},S=I;class f extends Error{constructor(e,t){const a=S(e,t);super(a),this.name=e,this.details=t}}const h={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},v=n=>[h.prefix,n,h.suffix].filter(e=>e&&e.length>0).join("-"),M=n=>{for(const e of Object.keys(h))n(e)},R={updateDetails:n=>{M(e=>{typeof n[e]=="string"&&(h[e]=n[e])})},getGoogleAnalyticsName:n=>n||v(h.googleAnalytics),getPrecacheName:n=>n||v(h.precache),getPrefix:()=>h.prefix,getRuntimeName:n=>n||v(h.runtime),getSuffix:()=>h.suffix};function U(n,e){const t=e();return n.waitUntil(t),t}try{self["workbox:precaching:7.0.0"]&&_()}catch{}const A="__WB_REVISION__";function O(n){if(!n)throw new f("add-to-cache-list-unexpected-type",{entry:n});if(typeof n=="string"){const i=new URL(n,location.href);return{cacheKey:i.href,url:i.href}}const{revision:e,url:t}=n;if(!t)throw new f("add-to-cache-list-unexpected-type",{entry:n});if(!e){const i=new URL(t,location.href);return{cacheKey:i.href,url:i.href}}const a=new URL(t,location.href),o=new URL(t,location.href);return a.searchParams.set(A,e),{cacheKey:a.href,url:o.href}}class W{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:a})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const o=t.originalRequest.url;a?this.notUpdatedURLs.push(o):this.updatedURLs.push(o)}return a}}}class q{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:a})=>{const o=(a==null?void 0:a.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return o?new Request(o,{headers:t.headers}):t},this._precacheController=e}}let g;function F(){if(g===void 0){const n=new Response("");if("body"in n)try{new Response(n.body),g=!0}catch{g=!1}g=!1}return g}async function D(n,e){let t=null;if(n.url&&(t=new URL(n.url).origin),t!==self.location.origin)throw new f("cross-origin-copy-response",{origin:t});const a=n.clone(),o={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},i=e?e(o):o,c=F()?a.body:await a.blob();return new Response(c,i)}const H=n=>new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),"");function x(n,e){const t=new URL(n);for(const a of e)t.searchParams.delete(a);return t.href}async function B(n,e,t,a){const o=x(e.url,t);if(e.url===o)return n.match(e,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),c=await n.keys(e,i);for(const r of c){const l=x(r.url,t);if(o===l)return n.match(r,a)}}class z{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const G=new Set;async function V(){for(const n of G)await n()}function $(n){return new Promise(e=>setTimeout(e,n))}try{self["workbox:strategies:7.0.0"]&&_()}catch{}function y(n){return typeof n=="string"?new Request(n):n}class Q{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new z,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const a of this._plugins)this._pluginStateMap.set(a,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let a=y(e);if(a.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const c=await t.preloadResponse;if(c)return c}const o=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const c of this.iterateCallbacks("requestWillFetch"))a=await c({request:a.clone(),event:t})}catch(c){if(c instanceof Error)throw new f("plugin-error-request-will-fetch",{thrownErrorMessage:c.message})}const i=a.clone();try{let c;c=await fetch(a,a.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const r of this.iterateCallbacks("fetchDidSucceed"))c=await r({event:t,request:i,response:c});return c}catch(c){throw o&&await this.runCallbacks("fetchDidFail",{error:c,event:t,originalRequest:o.clone(),request:i.clone()}),c}}async fetchAndCachePut(e){const t=await this.fetch(e),a=t.clone();return this.waitUntil(this.cachePut(e,a)),t}async cacheMatch(e){const t=y(e);let a;const{cacheName:o,matchOptions:i}=this._strategy,c=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},i),{cacheName:o});a=await caches.match(c,r);for(const l of this.iterateCallbacks("cachedResponseWillBeUsed"))a=await l({cacheName:o,matchOptions:i,cachedResponse:a,request:c,event:this.event})||void 0;return a}async cachePut(e,t){const a=y(e);await $(0);const o=await this.getCacheKey(a,"write");if(!t)throw new f("cache-put-with-no-response",{url:H(o.url)});const i=await this._ensureResponseSafeToCache(t);if(!i)return!1;const{cacheName:c,matchOptions:r}=this._strategy,l=await self.caches.open(c),p=this.hasCallback("cacheDidUpdate"),d=p?await B(l,o.clone(),["__WB_REVISION__"],r):null;try{await l.put(o,p?i.clone():i)}catch(u){if(u instanceof Error)throw u.name==="QuotaExceededError"&&await V(),u}for(const u of this.iterateCallbacks("cacheDidUpdate"))await u({cacheName:c,oldResponse:d,newResponse:i.clone(),request:o,event:this.event});return!0}async getCacheKey(e,t){const a=`${e.url} | ${t}`;if(!this._cacheKeys[a]){let o=e;for(const i of this.iterateCallbacks("cacheKeyWillBeUsed"))o=y(await i({mode:t,request:o,event:this.event,params:this.params}));this._cacheKeys[a]=o}return this._cacheKeys[a]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const a of this.iterateCallbacks(e))await a(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const a=this._pluginStateMap.get(t);yield i=>{const c=Object.assign(Object.assign({},i),{state:a});return t[e](c)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,a=!1;for(const o of this.iterateCallbacks("cacheWillUpdate"))if(t=await o({request:this.request,response:t,event:this.event})||void 0,a=!0,!t)break;return a||t&&t.status!==200&&(t=void 0),t}}class J{constructor(e={}){this.cacheName=R.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,a=typeof e.request=="string"?new Request(e.request):e.request,o="params"in e?e.params:void 0,i=new Q(this,{event:t,request:a,params:o}),c=this._getResponse(i,a,t),r=this._awaitComplete(c,i,a,t);return[c,r]}async _getResponse(e,t,a){await e.runCallbacks("handlerWillStart",{event:a,request:t});let o;try{if(o=await this._handle(t,e),!o||o.type==="error")throw new f("no-response",{url:t.url})}catch(i){if(i instanceof Error){for(const c of e.iterateCallbacks("handlerDidError"))if(o=await c({error:i,event:a,request:t}),o)break}if(!o)throw i}for(const i of e.iterateCallbacks("handlerWillRespond"))o=await i({event:a,request:t,response:o});return o}async _awaitComplete(e,t,a,o){let i,c;try{i=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:o,request:a,response:i}),await t.doneWaiting()}catch(r){r instanceof Error&&(c=r)}if(await t.runCallbacks("handlerDidComplete",{event:o,request:a,response:i,error:c}),t.destroy(),c)throw c}}class m extends J{constructor(e={}){e.cacheName=R.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(m.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const a=await t.cacheMatch(e);return a||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let a;const o=t.params||{};if(this._fallbackToNetwork){const i=o.integrity,c=e.integrity,r=!c||c===i;a=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?c||i:void 0})),i&&r&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,a.clone()))}else throw new f("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return a}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const a=await t.fetch(e);if(!await t.cachePut(e,a.clone()))throw new f("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[a,o]of this.plugins.entries())o!==m.copyRedirectedCacheableResponsesPlugin&&(o===m.defaultPrecacheCacheabilityPlugin&&(e=a),o.cacheWillUpdate&&t++);t===0?this.plugins.push(m.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}m.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:n}){return!n||n.status>=400?null:n}};m.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:n}){return n.redirected?await D(n):n}};class X{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:a=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new m({cacheName:R.getPrecacheName(e),plugins:[...t,new q({precacheController:this})],fallbackToNetwork:a}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const a of e){typeof a=="string"?t.push(a):a&&a.revision===void 0&&t.push(a.url);const{cacheKey:o,url:i}=O(a),c=typeof a!="string"&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(i)&&this._urlsToCacheKeys.get(i)!==o)throw new f("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(i),secondEntry:o});if(typeof a!="string"&&a.integrity){if(this._cacheKeysToIntegrities.has(o)&&this._cacheKeysToIntegrities.get(o)!==a.integrity)throw new f("add-to-cache-list-conflicting-integrities",{url:i});this._cacheKeysToIntegrities.set(o,a.integrity)}if(this._urlsToCacheKeys.set(i,o),this._urlsToCacheModes.set(i,c),t.length>0){const r=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(r)}}}install(e){return U(e,async()=>{const t=new W;this.strategy.plugins.push(t);for(const[i,c]of this._urlsToCacheKeys){const r=this._cacheKeysToIntegrities.get(c),l=this._urlsToCacheModes.get(i),p=new Request(i,{integrity:r,cache:l,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:c},request:p,event:e}))}const{updatedURLs:a,notUpdatedURLs:o}=t;return{updatedURLs:a,notUpdatedURLs:o}})}activate(e){return U(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),a=await t.keys(),o=new Set(this._urlsToCacheKeys.values()),i=[];for(const c of a)o.has(c.url)||(await t.delete(c),i.push(c.url));return{deletedURLs:i}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,a=this.getCacheKeyForURL(t);if(a)return(await self.caches.open(this.strategy.cacheName)).match(a)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new f("non-precached-url",{url:e});return a=>(a.request=new Request(e),a.params=Object.assign({cacheKey:t},a.params),this.strategy.handle(a))}}let j;const L=()=>(j||(j=new X),j);try{self["workbox:routing:7.0.0"]&&_()}catch{}const P="GET",w=n=>n&&typeof n=="object"?n:{handle:n};class b{constructor(e,t,a=P){this.handler=w(t),this.match=e,this.method=a}setCatchHandler(e){this.catchHandler=w(e)}}class Y extends b{constructor(e,t,a){const o=({url:i})=>{const c=e.exec(i.href);if(c&&!(i.origin!==location.origin&&c.index!==0))return c.slice(1)};super(o,t,a)}}class Z{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,a=Promise.all(t.urlsToCache.map(o=>{typeof o=="string"&&(o=[o]);const i=new Request(...o);return this.handleRequest({request:i,event:e})}));e.waitUntil(a),e.ports&&e.ports[0]&&a.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return;const o=a.origin===location.origin,{params:i,route:c}=this.findMatchingRoute({event:t,request:e,sameOrigin:o,url:a});let r=c&&c.handler;const l=e.method;if(!r&&this._defaultHandlerMap.has(l)&&(r=this._defaultHandlerMap.get(l)),!r)return;let p;try{p=r.handle({url:a,request:e,event:t,params:i})}catch(u){p=Promise.reject(u)}const d=c&&c.catchHandler;return p instanceof Promise&&(this._catchHandler||d)&&(p=p.catch(async u=>{if(d)try{return await d.handle({url:a,request:e,event:t,params:i})}catch(C){C instanceof Error&&(u=C)}if(this._catchHandler)return this._catchHandler.handle({url:a,request:e,event:t});throw u})),p}findMatchingRoute({url:e,sameOrigin:t,request:a,event:o}){const i=this._routes.get(a.method)||[];for(const c of i){let r;const l=c.match({url:e,sameOrigin:t,request:a,event:o});if(l)return r=l,(Array.isArray(r)&&r.length===0||l.constructor===Object&&Object.keys(l).length===0||typeof l=="boolean")&&(r=void 0),{route:c,params:r}}return{}}setDefaultHandler(e,t=P){this._defaultHandlerMap.set(t,w(e))}setCatchHandler(e){this._catchHandler=w(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new f("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new f("unregister-route-route-not-registered")}}let k;const ss=()=>(k||(k=new Z,k.addFetchListener(),k.addCacheListener()),k);function es(n,e,t){let a;if(typeof n=="string"){const i=new URL(n,location.href),c=({url:r})=>r.href===i.href;a=new b(c,e,t)}else if(n instanceof RegExp)a=new Y(n,e,t);else if(typeof n=="function")a=new b(n,e,t);else if(n instanceof b)a=n;else throw new f("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return ss().registerRoute(a),a}function ts(n,e=[]){for(const t of[...n.searchParams.keys()])e.some(a=>a.test(t))&&n.searchParams.delete(t);return n}function*as(n,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:a=!0,urlManipulation:o}={}){const i=new URL(n,location.href);i.hash="",yield i.href;const c=ts(i,e);if(yield c.href,t&&c.pathname.endsWith("/")){const r=new URL(c.href);r.pathname+=t,yield r.href}if(a){const r=new URL(c.href);r.pathname+=".html",yield r.href}if(o){const r=o({url:i});for(const l of r)yield l.href}}class ns extends b{constructor(e,t){const a=({request:o})=>{const i=e.getURLsToCacheKeys();for(const c of as(o.url,t)){const r=i.get(c);if(r){const l=e.getIntegrityForCacheKey(r);return{cacheKey:r,integrity:l}}}};super(a,e.strategy)}}function os(n){const e=L(),t=new ns(e,n);es(t)}function is(n){L().precache(n)}function cs(n,e){is(n),os(e)}const rs=[...K,...T,...N].map(n=>({url:n,revision:E}));cs(rs);self.addEventListener("push",function(n){const e=n.data.json(),t={body:e.body,icon:"/favicon.png",badge:"/badge.png"};n.waitUntil(self.registration.showNotification(e.title,t))});self.addEventListener("notificationclick",n=>{n.notification.close(),n.waitUntil(clients.openWindow("https://www.skanfarming.com.au/account"))});
