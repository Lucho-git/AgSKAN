import{s as n}from"./BZNkLwfI.js";import{g as d}from"./YnN_FSkG.js";import"./BSIXs_Xe.js";import{t as l}from"./7sStqI9Q.js";import{p as m}from"./BRXscziQ.js";const E={async updateEmail(s){var o;try{const{data:e}=await n.auth.getSession();if(!((o=e==null?void 0:e.session)!=null&&o.user))return l.error("You must be logged in to update your email"),d("/login"),{success:!1,message:"Not logged in",errorFields:[]};if(!s||s==="")return{success:!1,message:"An email address is required",errorFields:["email"]};if(!s.includes("@"))return{success:!1,message:"A valid email address is required",errorFields:["email"]};const{error:t}=await n.auth.updateUser({email:s});return t?(console.error("Error updating email:",t),{success:!1,message:t.message||"Unknown error 001. If this persists please contact us.",errorFields:["email"]}):(l.success("Email update initiated. Please check your inbox for verification."),{success:!0,message:"Email update initiated",email:s})}catch(e){return console.error("Error in updateEmail:",e),{success:!1,message:"Unknown error 001. If this persists please contact us.",errorFields:[]}}},async updatePassword(s,o,e){var t,p,u;try{const{data:c}=await n.auth.getSession();if(!((t=c==null?void 0:c.session)!=null&&t.user))return l.error("You must be logged in to update your password"),d("/login"),{success:!1,message:"Not logged in",errorFields:[]};const f=(u=(p=c.session.user)==null?void 0:p.amr)==null?void 0:u.find(g=>g.method==="recovery"),a=f&&!e;if(a&&Date.now()-f.timestamp*1e3>1e3*60*15)return{success:!1,message:'Recovery code expired. Please log out, then use "Forgot Password" on the sign in page to reset your password. Codes are valid for 15 minutes.',errorFields:[]};const r=[];let i=null;if(s||(i="You must type a new password",r.push("newPassword1")),o||(i="You must type the new password twice",r.push("newPassword2")),s.length<6&&(i="The new password must be at least 6 characters long",r.push("newPassword1")),s.length>72&&(i="The new password can be at most 72 characters long",r.push("newPassword1")),s!=o&&(i="The passwords don't match",r.push("newPassword1"),r.push("newPassword2")),!e&&!a&&(i="You must include your current password. If you forgot it, sign out then use 'forgot password' on the sign in page.",r.push("currentPassword")),i)return{success:!1,message:i,errorFields:[...new Set(r)]};if(!a){const{error:g}=await n.auth.signInWithPassword({email:c.session.user.email||"",password:e});if(g)return l.error("Incorrect password. Please try again."),d("/login/current_password_error"),{success:!1,message:"Incorrect password",errorFields:["currentPassword"]}}const{error:w}=await n.auth.updateUser({password:s});return w?{success:!1,message:w.message||"Unknown error 004. If this persists please contact us.",errorFields:[]}:(l.success("Password updated successfully"),{success:!0,message:"Password updated successfully"})}catch(c){return console.error("Error in updatePassword:",c),{success:!1,message:"Unknown error 004. If this persists please contact us.",errorFields:[]}}},async updateProfile(s,o="",e="",t){var p;try{console.log("Updating profile from client API");const{data:u}=await n.auth.getSession();if(!((p=u==null?void 0:u.session)!=null&&p.user))return l.error("You must be logged in to update your profile"),d("/login"),{success:!1,message:"Not logged in",errorFields:[]};if(!s)return{success:!1,message:"Name is required",errorFields:["fullName"]};const c=u.session.user.id,f=u.session.user.email,a={id:c,email:f,full_name:s,updated_at:new Date};o!==void 0&&(a.company_name=o),e!==void 0&&(a.website=e),t!==void 0&&(a.survey_completed=t),console.log("Profile data:",a);const{error:r}=await n.from("profiles").upsert(a);if(r)return console.error("Supabase profile error:",r),{success:!1,message:r.message||"Unknown error 005. If this persists please contact us.",errorFields:[]};if(a.full_name){const{error:i}=await n.auth.updateUser({data:{name:s}});i&&console.error("Supabase metadata error:",i)}return await n.auth.refreshSession(),m&&typeof m.loadProfile=="function"&&await m.loadProfile(c),l.success("Profile updated successfully"),{success:!0,message:"Profile updated successfully",profile:a}}catch(u){return console.error("Error in updateProfile:",u),{success:!1,message:"Unknown error 005. If this persists please contact us.",errorFields:[]}}},async deleteAccount(s){var o;try{const{data:e}=await n.auth.getSession();if(!((o=e==null?void 0:e.session)!=null&&o.user))return l.error("You must be logged in to delete your account"),d("/login"),{success:!1,message:"Not logged in",errorFields:[]};if(!s)return{success:!1,message:"You must provide your current password to delete your account. If you forgot it, sign out then use 'forgot password' on the sign in page.",errorFields:["currentPassword"]};const{error:t}=await n.auth.signInWithPassword({email:e.session.user.email||"",password:s});return t?(l.error("Incorrect password. Please try again."),d("/login/current_password_error"),{success:!1,message:"Incorrect password",errorFields:["currentPassword"]}):(l.info("Account deletion requires admin privileges. Please contact support."),{success:!1,message:"Account deletion via client API is not supported. Please contact support.",errorFields:[]})}catch(e){return console.error("Error in deleteAccount:",e),{success:!1,message:"Unknown error 002. If this persists please contact us.",errorFields:[]}}}};export{E as u};
