import{w as l}from"./CAuzrzLJ.js";import{c as u,a as c,P as g}from"./fQFbg8Ms.js";const i=u(g,c,{auth:{persistSession:!0,autoRefreshToken:!0,detectSessionInUrl:!0}}),n=l(null);let t=!1;async function S(){if(!t){console.log("Initializing session store...");try{const{data:s,error:o}=await i.auth.getSession();if(o){console.error("Error getting session:",o);return}console.log("Session initialization result:",s.session?"Found session":"No session"),s.session&&n.set(s.session);const{data:{subscription:a}}=i.auth.onAuthStateChange((e,r)=>{console.log("Auth state changed:",e),e==="SIGNED_IN"||e==="TOKEN_REFRESHED"?(console.log("Setting session in store due to auth event"),n.set(r)):e==="SIGNED_OUT"&&(console.log("Clearing session in store due to sign out"),n.set(null))});return t=!0,()=>{console.log("Cleaning up session subscription"),a.unsubscribe()}}catch(s){console.error("Error in session initialization:",s)}}}function _(s){localStorage.setItem("pending_map_id",s)}function f(){return localStorage.getItem("pending_map_id")}function I(){localStorage.removeItem("pending_map_id")}export{i as a,_ as b,I as c,f as g,S as i,n as s};
