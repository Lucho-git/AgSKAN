import{a as i}from"./sessionStore.B10XaNYZ.js";import{g as p}from"./entry.Do23-0vY.js";const u=new Set;async function d(r){if(!r||!r.user)return console.log("[Auth Helper] No valid session data provided"),!1;const e=r.user.id;if(u.has(e))return console.log("[Auth Helper] Already processed user session:",e),!0;console.log("[Auth Helper] Checking profile for user:",e),u.add(e);const{data:t,error:n}=await i.from("profiles").select("id, email, full_name, avatar_url, created_at").eq("id",e).single(),l={id:e,email:r.user.email,full_name:r.user.user_metadata?.full_name||null,avatar_url:r.user.user_metadata?.avatar_url||null,updated_at:new Date().toISOString(),last_sign_in:r.user.last_sign_in||new Date().toISOString()};if(n&&n.code==="PGRST116"){console.log("[Auth Helper] No profile found, creating new profile");const{error:o}=await i.from("profiles").insert({...l,created_at:new Date().toISOString(),onboarded:!1});return o&&o.code!=="23505"?(console.error("[Auth Helper] Error creating profile:",o),!1):(console.log("[Auth Helper] Profile created successfully"),await c(e),!0)}if(t){if(console.log("[Auth Helper] Existing profile found:",t),!t.email||!t.full_name&&l.full_name||!t.avatar_url&&l.avatar_url){console.log("[Auth Helper] Profile exists but needs updating with missing data");const s={updated_at:l.updated_at};t.email||(s.email=l.email),!t.full_name&&l.full_name&&(s.full_name=l.full_name),!t.avatar_url&&l.avatar_url&&(s.avatar_url=l.avatar_url);const{error:a}=await i.from("profiles").update(s).eq("id",e);if(a)return console.error("[Auth Helper] Error updating profile:",a),!1;console.log("[Auth Helper] Profile updated successfully with data:",s)}else{console.log("[Auth Helper] Profile exists and has all required data, just updating timestamps");const{error:s}=await i.from("profiles").update({last_sign_in:l.last_sign_in}).eq("id",e);s?console.error("[Auth Helper] Error updating profile timestamp:",s):console.log("[Auth Helper] Profile timestamp updated successfully")}return await c(e),!0}return console.error("[Auth Helper] Unexpected state in profile check"),!1}async function c(r){try{console.log("[Auth Helper] Checking for existing subscription for user:",r);const{data:e,error:t}=await i.from("user_subscriptions").select("user_id").eq("user_id",r);if(t)console.log("[Auth Helper] Error checking subscriptions (will try to create):",t.code);else if(e&&e.length>0)return console.log(`[Auth Helper] Found ${e.length} existing subscription(s)`),!0;console.log("[Auth Helper] No valid subscription found, creating one");const{error:n}=await i.from("user_subscriptions").insert({user_id:r,subscription:"FREE",marker_limit:100,trail_limit:1e5,current_seats:1,updated_at:new Date().toISOString(),created_at:new Date().toISOString()});return n?n.code==="23505"?(console.log("[Auth Helper] Subscription already exists (unique constraint)"),!0):(console.log("[Auth Helper] Non-critical error creating subscription:",n.code),!1):(console.log("[Auth Helper] Free subscription created successfully"),!0)}catch(e){return console.log("[Auth Helper] Unexpected error in subscription management:",e),!1}}function h(r="/account"){console.log("[Auth Helper] Setting up auth listener with redirect to:",r);let e=!1;const t=async()=>{const{data:{session:o}}=await i.auth.getSession();o?(console.log("[Auth Helper] Found existing session on page load, processing..."),await n("EXISTING_SESSION",o)):console.log("[Auth Helper] No existing session found")},n=async(o,s)=>{if(console.log("[Auth Helper] Auth event:",o,"User:",s?.user?.id),!s){console.log("[Auth Helper] No session in auth event");return}if(o==="INITIAL_SESSION"){console.log("[Auth Helper] Ignoring INITIAL_SESSION event");return}if((o==="SIGNED_IN"||o==="USER_UPDATED"||o==="EXISTING_SESSION")&&!e){console.log("[Auth Helper] Processing auth event:",o),e=!0;try{const a=await d(s);console.log("[Auth Helper] Profile update/creation result:",a),window.location.pathname!==r?(console.log(`[Auth Helper] Auth processing complete, redirecting to ${r}`),p(r)):console.log(`[Auth Helper] Already on ${r}, no redirect needed`)}catch(a){console.error("[Auth Helper] Error processing authentication:",a)}finally{e=!1}}};setTimeout(t,0);const{data:{subscription:l}}=i.auth.onAuthStateChange(n);return{data:{subscription:l},checkNow:t}}export{h as s,d as u};
