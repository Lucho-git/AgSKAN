import{w as l}from"./index.42bd087b.js";import{c as u,P as c,a as g}from"./index.39e7d0dd.js";const n=u(g,c,{auth:{persistSession:!0,autoRefreshToken:!0,detectSessionInUrl:!0}}),o=l(null);let t=!1;async function f(){if(!t){console.log("Initializing session store...");try{const{data:s,error:i}=await n.auth.getSession();if(i){console.error("Error getting session:",i);return}console.log("Session initialization result:",s.session?"Found session":"No session"),s.session&&o.set(s.session);const{data:{subscription:a}}=n.auth.onAuthStateChange((e,r)=>{console.log("Auth state changed:",e),e==="SIGNED_IN"||e==="TOKEN_REFRESHED"?(console.log("Setting session in store due to auth event"),o.set(r)):e==="SIGNED_OUT"&&(console.log("Clearing session in store due to sign out"),o.set(null))});return t=!0,()=>{console.log("Cleaning up session subscription"),a.unsubscribe()}}catch(s){console.error("Error in session initialization:",s)}}}function p(s){localStorage.setItem("pending_map_id",s)}export{n as a,p as b,f as i,o as s};
